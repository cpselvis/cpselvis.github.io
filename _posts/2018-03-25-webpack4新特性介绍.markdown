当下最流行的模块打包器 webpack 于2018年2月25日北京时间10:44 正式发布v4.0.0版本。从官方的 **[发布日志](https://github.com/webpack/webpack/releases/tag/v4.0.0)** 来看, 本次大版本更新带来了很多新特性更新和改善，这将会让webpack的配置更加简单。

## 环境支持
在发布日志里的 **Big changes** 板块，官方宣布不在支持Node 4, [Node 6](https://nodejs.org/en/blog/release/v6.0.0/) 使用的是v8 5.0版本，支持93%的ES6语法。不难看出，这个决定是为了更好的利用ES6语法的优势，来编写出更加整洁和健壮的代码。

## mode 属性
另一个大的改变是webpack需要设置mode属性，可以是 development 或 production，你不再需要通过下面这行代码去设置打包的执行环境了。
```
return new webpack.DefinePlugin({
    'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV || 'development')
});
```
通过mode, 你可以轻松设置打包环境。如果你将 mode 设置成 development，你将获得最好的开发阶段体验。这得益于webpack针对开发模式提供的特性：
* 浏览器调试工具
* 注释、开发阶段的详细错误日志和提示
* 快速和优化的增量构建机制

如果你将mode设置成了 production, webpack将会专注项目的部署，包括以下特性：
* 更小的bundle大小
* 去除掉只在开发阶段运行的代码

## 插件和优化
webpack4删除了CommonsChunkPlugin插件，它使用内置API **optimization.splitChunks** 和 ** optimization.runtimeChunk **，这意味着webpack会默认为你生成共享的代码块。其它插件变化如下:
* NoEmitOnErrorsPlugin 废弃，使用optimization.noEmitOnErrors替代，在生产环境中默认开启该插件。
* ModuleConcatenationPlugin 废弃，使用optimization.concatenateModules替代，在生产环境默认开启该插件。
* NamedModulesPlugin 废弃，使用optimization.namedModules替代，在生产环境默认开启。
* UglifyJs 默认开启缓存和并行功能。

## 新的打包类型


## 0CJS
0CJS的含义是0配置，webpack4受Parcel打包工具启发，尽可能的让开发者运行项目的成本变低。为了做到0配置，webpack4不再强制需要 **webpack.config.js** 作为打包的入口配置文件了，这无疑对小项目而言是福音。

你所需要做的是在你的项目里包含 ./src/index.js 文件。当在命令行里执行 webpack 命令时，webpack会将该文件作为项目的入口文件进行打包配置。
